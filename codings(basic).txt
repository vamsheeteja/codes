// Is A Number Prime

import java.util.*;

public class Main {
    public void checkPrime(int n) {
        int flag = 1;

        for (int i = 2; i <= Math.sqrt(n); i++) {
            if (n % i == 0) {
                flag = 0;
                break;
            }
        }

        if (n <= 1)
            flag = 0;
        else if (n == 2)
            flag = 1;


        if (flag == 0)
            System.out.println("not prime");
        else if (flag == 1)
            System.out.println("prime");
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        int n[] = new int[t];
        for (int i = 0; i < t; i++) {
            n[i] = sc.nextInt();
        }
        for (int i = 0; i < t; i++) {
            new Main().checkPrime(n[i]);
        }
    }
}
===============================================================================================================================================
// Find all the Prime Numbers
// Sieve of Erastosthenes
import java.util.*;

public class Main {
    public void allPrimes(int s, int e) {

        boolean prime[] = new boolean[e + 1];
        for (int i = 0; i < prime.length; i++) {
            prime[i] = true;
        }

        for (int i = 2; i * i <= e; i++) {
            if (prime[i] == true) {
                for (int j = i * i; j <= e; j += i) {
                    prime[j] = false;
                }
            }
        }

        for (int i = s; i < prime.length; i++) {
            if (prime[i] == true) {
                System.out.println(i + " ");
            }
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n1, n2;
        n1 = sc.nextInt();
        n2 = sc.nextInt();
        new Main().allPrimes(n1, n2);
    }
}
===============================================================================================================================================
//fibonacci
import java.util.*;

public class Main {

    public void fibonacci(int n) {
        int n1 = 0;
        int n2 = 1;
        System.out.println(n1 + "\n" + n2);
        int i = 0;
        int n3;
        while (i < n - 2) {
            n3 = n1 + n2;
            System.out.println(n3);
            n1 = n2;
            n2 = n3;
            i++;
        }
    }
    public static void main(String[] args) {
        // write your code here
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        new Main().fibonacci(n);
    }
}

===============================================================================================================================================
// Count Digits In A Number
// log-based solution 

import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int d = (int)Math.floor(Math.log10(n)+1);
        System.out.println(d);
    }
}

===============================================================================================================================================
// Digits Of A Number

import java.util.*;

public class Main {

    public static void printDigits(int n) {
        ArrayList < Integer > al = new ArrayList < > (5);
        // int num = n;
        int temp;
        while (n > 0) {
            temp = n % 10;
            al.add(temp);
            n = n / 10;
        }

        for (int i = al.size() - 1; i >= 0; i--)
            System.out.println(al.get(i));

    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        printDigits(n);
    }
}
===============================================================================================================================================
// Reverse A Number
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int temp = 0;
        while (n > 0) {
            temp = n % 10;
            System.out.println(temp);
            n = n / 10;
        }
    }
}
===============================================================================================================================================